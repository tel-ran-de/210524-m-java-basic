09:38:32 From Starta Institute 36 to Everyone:
	int n = 3;
	        int m = 4;
	        int[][] array = new int[n][m];
	        Random rand = new Random();
	        for (int i = 0; i < n; i++) {
	            for (int j = 0; j < m; j++) {
	                array[i][j] = rand.nextInt(51);
	            }
	        }
	//        for (int i = 0; i < n; i++) {
	//            System.out.println(Arrays.toString(array[i]));
	//        }
	        for (int i = 0; i < n; i++) {
	            for (int j = 0; j < m; j++) {
	                System.out.print(array[i][j] + "\t");
	            }
	            System.out.println();
	        }
10:01:21 From Starta Institute 36 to Everyone:
	public static void main(String[] args) {
	    int len = 10;
	    int[] arr = new int[len];
	    Random random = new Random();
	    for (int i = 0; i < arr.length; i++) {
	        arr[i] = random.nextInt(11);
	    }
	    printArray(arr);
	    int key = 8;
	    System.out.println("Index of " + key + " in array is " + linearSearch(arr, key));
	}
	public static int linearSearch(int[] arr, int key) {
	    for (int i = 0; i < arr.length; i++) {
	        if (arr[i] == key) {
	            return i;
	        }
	    }
	    return -1;
	}
	public static void printArray(int[] arr) {
	    System.out.println(Arrays.toString(arr));
	}
10:01:24 From Starta Institute 36 to Everyone:
	SOLID
10:10:22 From Starta Institute 36 to Everyone:
	public static void main(String[] args) {
	    int len = 10;
	    int[] arr = fieldInArray(len);
	    printArray(arr);
	    
	    int key = 8;
	    System.out.println("Index of " + key + " in array is " + linearSearch(arr, key));
	}
	public static int linearSearch(int[] arr, int key) {
	    for (int i = 0; i < arr.length; i++) {
	        if (arr[i] == key) {
	            return i;
	        }
	    }
	    return -1;
	}
	public static void printArray(int[] arr) {
	    System.out.println(Arrays.toString(arr));
	}
	public static int[] fieldInArray(int len) {
	    int[] arr = new int[len];
	    Random random = new Random();
	    for (int i = 0; i < arr.length; i++) {
	        arr[i] = random.nextInt(11);
	    }
	    
	    return arr;
	}
10:10:51 From Starta Institute 36 to Everyone:
	Получить от пользователя набор данных ( 6 целочисленных значений)
	Сохранить полученные данные в массив
	Получить от пользователя ключевой элемент
	Реализовать метод линейного поиска ключевого элемента в массиве, метод должен вернуть индекс элемента или -1
	Если элемент существует, вывести на консоль: Элемент в n-индексе, иначе Элемент не найден.
	Проанализируйте написанный код используя режим Дебаггер
11:01:56 From Olena Shurinova to Everyone:
	public class SetClass {	    public static void main(String[] args) {	        int[] array = new int[6];	        Scanner scanner = new Scanner(System.in);	        for (int i = 0; i < array.length; i++) {	            System.out.println("введите число");	            int num = scanner.nextInt();	            array[i] = num;		        }		        System.out.println(Arrays.toString(array));	        System.out.println("веедите число для поиска");	        int key = scanner.nextInt();	        int result = linearSearch(array, key);	        if (result != -1){	            System.out.println("Элемент найден по  " + result + " индексу");		        }	        else {	            System.out.println("Элемент не найден");		        }		    }			    public static int linearSearch(int[] arr, int key) {	        for (int i = 0; i < arr.length; i++) {	            if (arr[i] == key) {	                return i;	            }	        }	        return -1;	    }		}
11:24:37 From Starta Institute 36 to Everyone:
	https://proglib.io/p/6-search-algorithms-java
	https://proglib.io/p/java-sorting-algorithms
11:59:33 From Starta Institute 36 to Everyone:
	public static void main(String[] args) {
	    int n = 5;
	    int[] arr = new int[n];
	    Random random = new Random();
	    for (int i = 0; i < n; i++) {
	        arr[i] = random.nextInt(21);
	    }
	    System.out.println(Arrays.toString(arr));
	    bubbleSort(arr);
	    System.out.println(Arrays.toString(arr));
	}
	public static void bubbleSort(int[] array) {
	    boolean sorted = false;
	    int temp;
	    while (!sorted) {
	        sorted = true;
	        for (int i = 0; i < array.length - 1; i++) {
	            if (array[i] > array[i + 1]) {
	                temp = array[i];
	                array[i] = array[i + 1];
	                array[i + 1] = temp;
	                sorted = false;
	            }
	        }
	    }
	}
12:00:25 From Starta Institute 36 to Everyone:
	Дан массив {22, 3, 4, 2, 50}
	Реализуйте метод bubbleSort(int[] array)
	Выведите на консоль массив до и после сортировки
	Проанализируйте код
12:40:58 From Olena Shurinova to Everyone:
	public class BubbleSortArray {	    public static void main(String[] args) {	        int[] array ={22, 3, 4, 2, 50};	        System.out.println("масив до сортировки");	        for (int i = 0; i < array.length; i++){	            System.out.print(array[i] + " ");	        }	        System.out.println();	        bubbleSort(array);		        System.out.println(Arrays.toString(array));				    }	    public static void bubbleSort(int[] array) {	        boolean isSorted = false;	        int k;	        while (!isSorted){	            isSorted = true;	            for (int i = 0; i < array.length -1;  i++){	                if (array[i] > array[i+1] ){	                    k = array[i];	                    array[i] = array[i + 1];	                    array[i + 1] = k;	                    isSorted = false;	                }	            }	        }	    }	}
